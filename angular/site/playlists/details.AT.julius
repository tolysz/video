function($scope, $log, $http, $stateParams, $timeout, $q, GroupUser){

    $scope.allContacts = [];

    $scope.members = GroupUser.query({uuid:$stateParams.uuid}, function(users){
        $scope.allContacts = _.map( users, function(u){
            u.email = _.first(u.emails) || "(nope)";
            u.name = u.name || u.friendly || u.email;
            u._lowername = u.name.toLowerCase();

            u.avatar = u.avatar || 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50';
            return u;
        });
    });

    $scope.debug = {};
    $scope.debug['params'] = $stateParams;
    $scope.uuid = $stateParams.uuid;
    $scope.pluuid = $stateParams.pluuid;
    $scope.getList = function(){
        $log.debug($stateParams.pluuid);
        $http.get('@{UserRootR}' + "/group/" + $scope.uuid + "/playlists/" + $stateParams.pluuid, {cache:true})
            .success( function(data){
                $log.debug(data);
                $scope.debug['data'] = data;
                $scope.playlist = data;
            }
        );
    };

    $scope.setThose = function (pl){
        $log.debug (pl);
        $scope.curr_pl = pl[0];
        $scope.curr_id = pl[0].contentDetails.videoId;
        $scope.curr_vars = { videoId: pl[0].contentDetails.videoId};
        $scope.curr_title = pl[0].snippet.title;
        $scope.viduuid = pl[1];
    };

    $scope.flipSort = function(){
        $log.debug($scope.sort);
        $scope.sort = ! $scope.sort;
    };
    $scope.getList();

    $scope.querySearch = function(query){
        var results = query ?
            _.filter($scope.allContacts, createFilterFor(query)) : [];

        return results;
    };


        $scope.cc={};
        $scope.cc.contacts = [];
        $scope.filterSelected = true;

        function createFilterFor(query) {
            var lowercaseQuery = angular.lowercase(query);

            return function filterFn(contact) {
                return (contact._lowername.indexOf(lowercaseQuery) != -1);
            };
        }
    // todo: Immutable.fromJS({})
    $scope.userUuid = [];
    $scope.c2 = [];
    $scope.$watch('cc', function(val, old){
        $log.debug(val);

        var newcc = _.filter($scope.cc.contacts, _.isObject);
        $timeout(function() {
            if (!_.isEqual($scope.cc.contacts, newcc)) {
                $scope.cc.contacts = newcc;
            }
        },0);
    },true);

    $scope.saveMe = function(){
        $scope.userUuid = _.map($scope.cc.contacts, function(u){return u['user'];});
    }
}
